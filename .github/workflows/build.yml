name: Build NixOS ISO

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ISO
        run: |
          nix-build '<nixpkgs/nixos>' \
            -A config.system.build.isoImage \
            -I nixos-config=.hosts/installer/default.nix

      - name: Get ISO Path
        id: get-iso
        run: |
          ISO_PATH=$(readlink -f result/iso/*.iso)
          echo "iso_path=${ISO_PATH}" >> $GITHUB_OUTPUT
          echo "iso_name=$(basename ${ISO_PATH})" >> $GITHUB_OUTPUT

      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nixos-mpi-cluster-iso
          path: ${{ steps.get-iso.outputs.iso_path }}
          retention-days: 5

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.get-iso.outputs.iso_path }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Checksums
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd $(dirname ${{ steps.get-iso.outputs.iso_path }})
          sha256sum ${{ steps.get-iso.outputs.iso_name }} > SHA256SUMS
          sha512sum ${{ steps.get-iso.outputs.iso_name }} > SHA512SUMS

      - name: Upload Checksums
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            $(dirname ${{ steps.get-iso.outputs.iso_path }})/SHA256SUMS
            $(dirname ${{ steps.get-iso.outputs.iso_path }})/SHA512SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
